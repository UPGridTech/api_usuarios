---
- name: Configurar Cliente Local (Docker + Registro na API)
  hosts: all
  gather_facts: yes

  tasks:

    - name: Atualizar cache de pacotes
      apt:
        update_cache: yes

    - name: Atualizar todos os pacotes do sistema
      apt:
        upgrade: dist

    - name: Instalar Git
      apt:
        name: git
        state: present

    - name: Instalar pré-requisitos do Docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Adicionar chave GPG do Docker
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /usr/share/keyrings/docker-archive-keyring.gpg
        mode: '0644'

    - name: Adicionar repositório Docker
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Instalar Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Garantir que Docker esteja ativo
      service:
        name: docker
        state: started
        enabled: yes

    - name: Clonar PR privado automaticamente
      git:
        repo: "https://{{ github_token }}@github.com/UPGridTech/api_usuarios/"
        dest: "{{ app_path }}"
        version: "refs/pull/{{ pr_number }}/head"
        force: yes
    - name: Criar .env na VM
      copy:
        dest: "{{ app_path }}/docker/.env"
        content: |
          POSTGRES_USER={{ postgres_user }}
          POSTGRES_PASSWORD={{ postgres_password }}
          POSTGRES_DB={{ postgres_db }}
          DATABASE_URL=postgresql://{{ postgres_user }}:{{ postgres_password }}@db:5432/{{ postgres_db }}
    - name: Docker compose Deploy app
      command: docker compose up -d --build
      args:
        chdir: "{{ app_path }}"