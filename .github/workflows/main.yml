name: Build e Teste na PR para Dev

on:
  pull_request:
    branches:
      - dev
    types: [opened, synchronize, reopened, closed]

jobs:
  build-and-run:
    runs-on: self-hosted
    steps:
      - name: Checkout cÃ³digo da PR
        uses: actions/checkout@v4

      - name: Set PR Workspace Name
        run: echo "PR_WORKSPACE=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
    
      - name: Terraform Init + Select Workspace
        working-directory: terraform
        run: |
          PR_WS="pr-${{ github.event.pull_request.number }}"
          mkdir -p /home/felipe/state
          id -u
          id -g
          chown $(id -u):$(id -g) /home/felipe/state
          terraform init -reconfigure -input=false -backend-config="path=/home/felipe/state/${PR_WS}.tfstate"
          terraform workspace select -or-create "$PR_WS"

      - name: Terraform Apply (on PR open/sync)
        if: github.event.action != 'closed'
        working-directory: terraform
        run: |
          terraform apply -var "vm_count=1" -auto-approve
          terraform state pull > /home/felipe/state/${PR_WS}.tfstate

      - name: Terraform Destroy (on PR closed)
        if: github.event.action == 'closed'
        working-directory: terraform
        run: |
          terraform destroy -var "vm_count=1" -auto-approve
          
      - name: Obter todos os IPs das VMs
        id: vm_ips
        working-directory: terraform
        run: |
          VM_IPS=$(terraform output -json vm_ip | jq -r '.[]')
          echo "VM_IPS=$VM_IPS" >> $GITHUB_ENV
          echo "IPs das VMs: $VM_IPS"

      - name: Run Ansible on each VM
        run: |
          for IP in $VM_IPS; do
            echo "=== Running Ansible on $IP ==="
            ansible-playbook playbooks/vm_setup.yml \
              -i "${IP}," \
              -u "${{ secrets.ANSIBLE_USER }}" \
              --extra-vars "ansible_password=${{ secrets.ANSIBLE_PASSWORD }} pr_branch=${{ github.event.pull_request.number }}" \
              --ssh-common-args='-o StrictHostKeyChecking=no' \
              -vvv
          done

      - name: Healthcheck
        run: |
          curl -f http://$VM_IP/healthz
        
