name: Build e Teste na PR para Dev

on:
  pull_request:
    branches:
      - dev
    types: [opened, synchronize, reopened, closed]

jobs:
  build-and-run:
    runs-on: self-hosted
    steps:
      - name: Checkout cÃ³digo da PR
        uses: actions/checkout@v4

      - name: Set PR Workspace Name
        run: echo "PR_WORKSPACE=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
      
      - name: Terraform Init
        working-directory: terraform
        run: |
          terraform init -input=false \
            -backend-config="organization=upgrid" \
            -backend-config="workspaces.name=${PR_WORKSPACE}"

      - name: Terraform Apply (on PR open/sync)
        if: github.event.action != 'closed'
        working-directory: terraform
        run: terraform apply -var "vm_count=1"-auto-approve

      - name: Terraform Destroy (on PR closed)
        if: github.event.action == 'closed'
        working-directory: terraform
        run: |
          terraform destroy -var "vm_count=1" -auto-approve
          # opcional: apagar workspace via API
          PR_WS="pr-${GITHUB_EVENT_NUMBER}"
          curl --header "Authorization: Bearer $TF_API_TOKEN" \
               --header "Content-Type: application/vnd.api+json" \
               --request DELETE \
               https://app.terraform.io/api/v2/organizations/${TF_ORG}/workspaces/${PR_WS}
      - name: Obter todos os IPs das VMs
        id: vm_ips
        working-directory: terraform
        run: |
          VM_IPS=$(terraform output -json vm_ip | jq -r '.[]')
          echo "VM_IPS=$VM_IPS" >> $GITHUB_ENV
          echo "IPs das VMs: $VM_IPS"

      - name: Rodar Ansible em cada VM
        run: |
          for IP in $VM_IPS; do
            echo "============================"
            echo "Rodando Ansible em $IP"
            ansible-playbook playbooks/setup_vm.yml \
              -i "${IP}," \
              -u "root" \
              --extra-vars "pr_branch=${{ github.head_ref }}"
            echo "============================"
          done

      - name: Healthcheck
        run: |
          curl -f http://$VM_IP/healthz
        
